name: Deploy
on:
  push:
    branches:
      - main
  workflow_dispatch: # manual trigger

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment:
      name: release
    permissions:
      id-token: write
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: "16"

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Tests pass
        run: yarn test

      - name: Build list
        run: yarn build

      # - name: Load NPM secret
      #   uses: 1password/load-secrets-action@581a835fb51b8e7ec56b71cf2ffddd7e68bb25e0
      #   with:
      #     # Export loaded secrets as environment variables
      #     export-env: true
      #   env:
      #     OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
      #     NPM_TOKEN: op://npm-deploy/npm-runner-token/secret

      # - name: Publish to NPM
      #   uses: JS-DevTools/npm-publish@18351461ae08dde235c0ccee0633ec905f0b9a52
      #   with:
      #     token: ${{ env.NPM_TOKEN }}

      # - name: Load Web 3 deploy secrets
      #   uses: 1password/load-secrets-action@d1a4e73495bde3551cf63f6c048588b8f734e21d
      #   with:
      #     # Export loaded secrets as environment variables
      #     export-env: true
      #   env:
      #     OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_WEB3_VAULT_TOKEN }}
      #     CLOUDFLARE_TOKEN: op://web3-deploy-vault/web3-edit-token/token

      # - name: Pin to IPFS
      #   id: upload
      #   uses: aquiladev/ipfs-action@v0.3.1
      #   with:
      #     path: "./build/uniswap-default.tokenlist.json"
      #     service: pinata
      #     pinataKey: ${{ secrets.PINATA_API_KEY }}
      #     pinataSecret: ${{ secrets.PINATA_API_SECRET_KEY }}
      # pinataPinName: Uniswap Default Token List

      # - name: Deploy to Cloudflare Workers
      #   uses: cloudflare/wrangler-action@v3
      #   with:
      #     apiToken: ${{ secrets.CLOUDFLARE_TOKEN }}
      #     command: deploy

      # - name: Purge Cloudflare Cache
      #   run: |
      #     curl -X POST "https://api.cloudflare.com/client/v4/zones/${{ secrets.CLOUDFLARE_ZONE_ID }}/purge_cache" \
      #       -H "Authorization: Bearer ${{ secrets.CLOUDFLARE_TOKEN }}" \
      #       -H "Content-Type: application/json" \
      #       --data '{
      #         "files": [
      #           "https://tokens.ideapanda.xyz/",
      #           "https://tokens.ideapanda.xyz/uniswap-default.tokenlist.json"
      #         ]
      #       }'
